* Required and recommended software 
** External programs
*** All platforms

 - git
 - perl
 - latexmk
 - aspell 
 - googlecl 
   
*** Linux only
    
 - recoll 

*** Installation under Debian/Ubuntu

#+BEGIN_SRC sh :eval never
sudo apt-get install git perl latexmk aspell recoll
#+END_SRC
   
** Emacs extensions
   
*** Emacs extensions downloaded via make init 

When you in the emacs-genome director execute the command
#+BEGIN_SRC sh :eval never
make init
#+END_SRC
a couple of emacs extensions are downloaded from github:
 - org-mode
 - auctex
 - ess
 - SuperMan
 - ssh.el 
 - helm
 - pandoc-mode
 - google-translate

See /path/to/emacs-genome/.gitmodules for the addresses.

# *** Emacs extensions not downloaded via make init

* The things you can do when you have the emacs-genome
** Copy-and-paste

Whenever you copy (M-w) or kill (C-w) text in a region, it will be
copied to the "kill-ring". The emacs default key bindings are C-y for
yank (paste) and M-y for yank-pop (paste earlier copies/kills). The
function yank-pop works when the previous command was yank. It takes
the text that was yanked and replaces it with the text from an earlier
kill. Repeatedly pressing M-y then cycles through the ring of earlier
copies/kills.

The emacs-genome has the following modifications:

M-y is bound to yank-or-pop which combines yank and yank-pop such that
the same key (M-y) is used for both commands.

My fingers have difficulties to reach M-w, so I use M-r instead.

** Completion

*** Completing words and sequences of words

Start typing, press M-i (dabbrev-expand). This inserts the closest
completion. Completions are found in all buffers. "Closest" starts at
the current point in the current buffer.

Hit M-i again to replace the previous completion by the next closest
completion.

After inserting a completion, hit first SPACE and directly after M-i
to insert the next word after the completion from the place where the
completion was found.

*** Hippie expand

Hit M-i (hippie-expand) to expand file-names and symbols and even R objects in R buffers.

See file ~/emacs-genome/snps/hippie-snps.el for functions that are
used for completion.

** Evaluating R code

highlight region (e.g. M-h or M-l) then M-j 

** Latexing a document

#+BEGIN_EXAMPLE   
\M-j RETURN make-pdf RETURN
#+END_EXAMPLE
   
** Exporting an org document to pdf via latex

#+BEGIN_EXAMPLE   
\M-k
#+END_EXAMPLE

** Finding files based on contents  

This requires the text indexing engine recoll (xapian) which you need
to adapt to your directory structure, and a crontab entry to update
regularly, e.g.,

#+BEGIN_EXAMPLE
0 *  * * * RCLCRON_RCLINDEX= RECOLL_CONFDIR="/path/to/.recoll/" recollindex   
#+END_EXAMPLE

The command helm-recoll-search (short-cut: C-v) is an emacs interface
to the recoll search.

Example:

C-v  then type "ext:bib helene blanche"

This should show list of bibtex files which include both words:
"helene" and "blanche".

* Modifying the settings

If you want overwrite some of the emacs-genome way of doing things,
like changing keybindings or the start-up behaviour, then you need to
place these changes in your ~/.emacs file *after* the line which loads
the sample init file.

** Changing keybindings

http://www.masteringemacs.org/articles/2011/02/08/mastering-key-bindings-emacs/


#+TITLE: The emacs-genome manual
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc author:nil
#+LaTeX_HEADER:\usepackage{authblk}
#+LaTeX_HEADER:\usepackage{natbib}
#+LaTeX_HEADER:\author{Thomas Alexander Gerds}
#+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen}
#+PROPERTY: session *R* 
#+PROPERTY: cache yes
